diff --git a/components/toolchain/cmsis/include/cmsis_armcc.h b/components/toolchain/cmsis/include/cmsis_armcc.h
index f2bb66a..383a833 100644
--- a/components/toolchain/cmsis/include/cmsis_armcc.h
+++ b/components/toolchain/cmsis/include/cmsis_armcc.h
@@ -56,7 +56,7 @@
  */
 __STATIC_INLINE uint32_t __get_CONTROL(void)
 {
-  register uint32_t __regControl         __ASM("control");
+  uint32_t __regControl         __ASM("control");
   return(__regControl);
 }
 
@@ -68,7 +68,7 @@ __STATIC_INLINE uint32_t __get_CONTROL(void)
  */
 __STATIC_INLINE void __set_CONTROL(uint32_t control)
 {
-  register uint32_t __regControl         __ASM("control");
+  uint32_t __regControl         __ASM("control");
   __regControl = control;
 }
 
@@ -80,7 +80,7 @@ __STATIC_INLINE void __set_CONTROL(uint32_t control)
  */
 __STATIC_INLINE uint32_t __get_IPSR(void)
 {
-  register uint32_t __regIPSR          __ASM("ipsr");
+  uint32_t __regIPSR          __ASM("ipsr");
   return(__regIPSR);
 }
 
@@ -92,7 +92,7 @@ __STATIC_INLINE uint32_t __get_IPSR(void)
  */
 __STATIC_INLINE uint32_t __get_APSR(void)
 {
-  register uint32_t __regAPSR          __ASM("apsr");
+  uint32_t __regAPSR          __ASM("apsr");
   return(__regAPSR);
 }
 
@@ -104,7 +104,7 @@ __STATIC_INLINE uint32_t __get_APSR(void)
  */
 __STATIC_INLINE uint32_t __get_xPSR(void)
 {
-  register uint32_t __regXPSR          __ASM("xpsr");
+  uint32_t __regXPSR          __ASM("xpsr");
   return(__regXPSR);
 }
 
@@ -116,7 +116,7 @@ __STATIC_INLINE uint32_t __get_xPSR(void)
  */
 __STATIC_INLINE uint32_t __get_PSP(void)
 {
-  register uint32_t __regProcessStackPointer  __ASM("psp");
+  uint32_t __regProcessStackPointer  __ASM("psp");
   return(__regProcessStackPointer);
 }
 
@@ -128,7 +128,7 @@ __STATIC_INLINE uint32_t __get_PSP(void)
  */
 __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 {
-  register uint32_t __regProcessStackPointer  __ASM("psp");
+  uint32_t __regProcessStackPointer  __ASM("psp");
   __regProcessStackPointer = topOfProcStack;
 }
 
@@ -140,7 +140,7 @@ __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
  */
 __STATIC_INLINE uint32_t __get_MSP(void)
 {
-  register uint32_t __regMainStackPointer     __ASM("msp");
+  uint32_t __regMainStackPointer     __ASM("msp");
   return(__regMainStackPointer);
 }
 
@@ -152,7 +152,7 @@ __STATIC_INLINE uint32_t __get_MSP(void)
  */
 __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 {
-  register uint32_t __regMainStackPointer     __ASM("msp");
+  uint32_t __regMainStackPointer     __ASM("msp");
   __regMainStackPointer = topOfMainStack;
 }
 
@@ -164,7 +164,7 @@ __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
  */
 __STATIC_INLINE uint32_t __get_PRIMASK(void)
 {
-  register uint32_t __regPriMask         __ASM("primask");
+  uint32_t __regPriMask         __ASM("primask");
   return(__regPriMask);
 }
 
@@ -176,7 +176,7 @@ __STATIC_INLINE uint32_t __get_PRIMASK(void)
  */
 __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 {
-  register uint32_t __regPriMask         __ASM("primask");
+  uint32_t __regPriMask         __ASM("primask");
   __regPriMask = (priMask);
 }
 
diff --git a/components/toolchain/cmsis/include/cmsis_gcc.h b/components/toolchain/cmsis/include/cmsis_gcc.h
index a048930..1a6ce65 100644
--- a/components/toolchain/cmsis/include/cmsis_gcc.h
+++ b/components/toolchain/cmsis/include/cmsis_gcc.h
@@ -147,7 +147,7 @@ __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
  */
 __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 {
-  register uint32_t result;
+  uint32_t result;
 
   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
   return(result);
@@ -172,7 +172,7 @@ __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOf
  */
 __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 {
-  register uint32_t result;
+  uint32_t result;
 
   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
   return(result);
